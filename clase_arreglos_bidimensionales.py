# -*- coding: utf-8 -*-
"""clase arreglos bidimensionales.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_Ox6pfAef64RN9rDHD2Q38bbmfui_Icr
"""

import numpy as np
matriz = np.array([[3, 14, 16],[7, 12, 18]])
print(matriz)

print(matriz[0][2])
print(matriz[0, 2])

print(matriz[:,2]) #todos los elementos de la columna 2
print(matriz[0,:]) #todos los elementos de la fila 0
print(matriz[1,::-1]) #todos los elementos de la fina 1, pero orden invertidos

matriz_zeros = np.zeros((3,3)) #crea matriz con ceros
print(matriz_zeros)

matriz_ones = np.ones((3,3)) #crea matriz con unos
print(matriz_ones)

print(np.concatenate((matriz_zeros, matriz_ones), axis=0)) #concatenar 2 arreglos, con axis definimos si la concatenaci√≥n es a nivel de filas o columnas

matriz_diag = np.diag([3,2,1]) #crea matriz con unos
print(matriz_diag)

print(matriz.sum()) #suma todos los elementos del arreglo

print(matriz.ndim)
print(matriz.shape)
print(matriz.size)

#for c_row in range(2):
#  for c_col in range(3):
#    print(matriz[c_row][c_col])